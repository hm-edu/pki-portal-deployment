version: "3"
services:
  postgresql:
    image: postgres:15
    container_name: postgres
    restart: always
    volumes:
      - postgresql:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    networks:
      - portal-backend

  pki-rest-interface:
    build:
      context: portal-backend
      dockerfile: Dockerfile
      args:
        - SERVICE=pki-rest-interface
    restart: always
    depends_on:
      - domain-rest-interface
      - pki-service
    networks:
      - portal-frontend
      - portal-backend
    env_file:
      - .env
    command:
      - --level
      - "info"
      - --audience
      - "$AUDIENCE"
      - --jwks_uri
      - "$JWKS_URI"
      - --ssl_service
      - "pki-service:8081"
      - --smime_service
      - "pki-service:8081"
      - --domain_service
      - "domain-rest-interface:8081"
      - --cors_allowed_origins
      - "$NEXTAUTH_URL"

  pki-service:
    build:
      context: portal-backend
      dockerfile: Dockerfile
      args:
        - SERVICE=pki-service
    restart: always
    depends_on:
      - postgresql
    networks:
      - portal-backend
    env_file:
      - .env
    command:     
      - --level
      - "info"
      - --sectigo_user
      - "$SECTIGO_USER"
      - --sectigo_customeruri
      - "DFN"
      - --sectigo_password
      - "$SECTIGO_PASSWORD"
      - --ssl_org_id
      - "$SSL_ORG_ID"
      - --ssl_term
      - "$SSL_TERM"
      - --ssl_profile
      - "$SSL_PROFILE"
      - --smime_profile
      - "$SMIME_PROFILE"
      - --smime_org_id
      - "$SMIME_ORG_ID"
      - --smime_term
      - "$SMIME_TERM"
      - --smime_student_term
      - "$SMIME_STUDENT_TERM"
      - --smime_key_length
      - "$SMIME_KEY_LENGTH"
      - --smime_key_type
      - "$SMIME_KEY_TYPE"
      - --db
      - "postgresql://pki:pki@postgres/certificates"

  eab-rest-interface:
    build:
      context: portal-backend
      dockerfile: Dockerfile
      args:
        - SERVICE=eab-rest-interface
    restart: always
    networks:
      - portal-frontend
      - portal-backend
    depends_on:
      - postgresql
      - domain-rest-interface
    env_file:
      - .env
    command:
      - --level
      - "info"
      - --audience
      - "$AUDIENCE"
      - --jwks_uri
      - "$JWKS_URI"
      - --db
      - "postgresql://acme:acme@postgres/eab"
      - --acme_db
      - "postgresql://acme:acme@postgres/acme"
      - --provisioner_id
      - "acme/acme"
      - --domain_service
      - "domain-rest-interface:8081"
      - --cors_allowed_origins
      - "$NEXTAUTH_URL"

  domain-rest-interface:
    build:
      context: portal-backend
      dockerfile: Dockerfile
      args:
        - SERVICE=domain-rest-interface
    restart: always
    networks:
      - portal-frontend
      - portal-backend
    depends_on:
      - postgresql
      - pki-service
    env_file:
      - .env
    command:        
      - --level
      - "info"
      - --audience
      - "$AUDIENCE"
      - --jwks_uri
      - "$JWKS_URI"
      - --db
      - "postgresql://pki:pki@postgres/domain"
      - --ssl_service
      - "pki-service:8081"
      - --grpc-port
      - "8081"
      - --preseed 
      - "/data/preseed.json"
      - --cors_allowed_origins
      - "$NEXTAUTH_URL"
      - --admins
      - "$DOMAIN_ADMINS"
    volumes:
      - ./db-init/preseed.json:/data/preseed.json

  frontend:
    build:
      context: portal-frontend
      dockerfile: Dockerfile
      args:
        LOGO_LARGE: ${LOGO_LARGE}
        LOGO_SMALL: ${LOGO_SMALL}    
        FAVICON: ${FAVICON}         
        NEXTAUTH_URL: ${NEXTAUTH_URL}
        NEXT_PUBLIC_ORGANIZATION_NAME: ${NEXT_PUBLIC_ORGANIZATION_NAME}
        NEXT_PUBLIC_AUTH_IDP: ${NEXT_PUBLIC_AUTH_IDP}
        NEXT_PUBLIC_EAB_HOST: ${NEXT_PUBLIC_EAB_HOST}
        NEXT_PUBLIC_PKI_HOST: ${NEXT_PUBLIC_PKI_HOST}
        NEXT_PUBLIC_DOMAIN_HOST: ${NEXT_PUBLIC_DOMAIN_HOST}
        NEXT_PUBLIC_ACME_HOST: ${NEXT_PUBLIC_ACME_HOST}
        NEXT_PUBLIC_SENTRY_DSN: ${NEXT_PUBLIC_SENTRY_DSN}
        NEXT_PUBLIC_DISABLE_CSP: ${NEXT_PUBLIC_DISABLE_CSP}
    restart: always
    env_file:
      - .env
    networks:
      - portal-frontend

  acme:
    image: ghcr.io/hm-edu/certificates:master
    restart: always
    networks:
      - portal-backend
    depends_on:
      - postgresql
      - eab-rest-interface
      - pki-service
    volumes:
      - ./acme:/home/step
    environment:
      - STEP_TLS_INSECURE=1
    command: /usr/local/bin/step-ca

  caddy:
    image: caddy
    restart: always
    networks:
      - default 
      - portal-frontend
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

volumes:
  caddy_config:
  caddy_data:
  postgresql:
networks:
  default:
  portal-frontend:
    name: portal-frontend
  portal-backend:
    name: portal-backend